@*SignInManager is in this namespace*@
@using Microsoft.AspNetCore.Identity
@*Inject SignInManager, so we could check if the user is signed-in*@
@inject SignInManager<IdentityUser> SignInManager

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SongsStore</title>
    <link href="~/lib/fontawesome/css/font-awesome.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <environment include="Development">
        <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    </environment>
    @*On href we will run production and staging environment files*@
    @*integrity link used for check subsource integrity - If the file have retrieve malicious altered*@
    @*ggOyR0iXCbMQv3Xipma34MD - this have to be match from what the browser loaded else it is altered*@
    @*If the file download from CDN(Proxy server) is failed(do crush) it will run asp-fallback-href*@
    @*In case CDN will crush we can use this minified bootstrap files*@
    @*asp-suppress-fallback-integrity="true" - true it is means that the browser will not check integrity
        files downloaded asp-fallback-href even if will be crush - we can trust our server*@
    @*The following 3 attributes and their associated values are used to check if the CDN is down:
        asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute"*@
    <environment exclude="Development">
        <link rel="stylesheet"
              href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
              integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
              crossorigin="anonymous"
              asp-fallback-href="~/lib/bootstrap/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only"
              asp-fallback-test-property="position"
              asp-fallback-test-value="absolute"
              asp-suppress-fallback-integrity="true">
        <link href="~/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
        <script src="/lib/jquery/dist/jquery.min.js"></script>
        <script src="/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js">
        </script>
    </environment>

</head>
<body>
    <div class="p-1 bg-dark" role="navigation">
        <div class="row">
            <li><a class="col navbar-brand text-white" asp-area="" asp-controller="Home" asp-action="ListCountry">Home Page</a></li>
            <li>
                <div class="col-5 navbar-brand text-white text-right">
                    @await Component.InvokeAsync("CartSummary")
                </div>
            </li>
            @if (SignInManager.IsSignedIn(User))
            {
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="Admin" asp-action="Index" class="col navbar-brand text-white">Go to Admin Menu</a>
                    <a class="btn btn btn-success" asp-controller="Administration" asp-action="ListUsers">Users</a>
                    <a class="btn btn btn-success" asp-controller="Administration" asp-action="ListRoles">Roles</a>
                }
                    <a class="btn btn btn-success" asp-controller="Account" asp-action="ChangePassword">Change Password</a>

                    <li class="btn btn-light">
                        <form method="post" asp-controller="Account" asp-action="Logout">
                            <button type="submit" id="autoWidth"
                                    class="nav-link btn btn-link py-0">
                                Logout @User.Identity.Name
                            </button>
                        </form>
                    </li>
            }
            else
            {
                <li><a class="col navbar-brand text-white" asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
                <a class="col navbar-brand text-white" asp-controller="Account" asp-action="Register">Register User</a>
            }
        </div>
    </div>
    <div class="container body-content">
        <div class="row">
            @*grid class, used for layout - col-md(medium)-3 - md(medium) is working on making order when resize of screen to medium*@
            @*col-sm(small)-3 - md(small) is working on making order when resize of screen to medium*@
            @*col-xs(xtrasmall)-3 - md(xtrasmall) is working on making order when resize of screen to medium*@
            @*col-md-offset-3 - move 3 columns to the right*@
            <div id="countries" class="col-md-3">
                @await Component.InvokeAsync("NavigationSearch")
                <br />
                @await Component.InvokeAsync("NavigationMenu")
            </div>
            @*Here the code from another views will run*@
            <div class="col-md-9">
                @RenderBody()
            </div>
        </div>
        <hr />
        <footer>
            <p><center>Songs List</center></p>
        </footer>
    </div>
    @*Here all the scripts of elements from wwwroot will run*@
    @*It is optional to have scripts in every view class*@
    @if (IsSectionDefined("Scripts"))
    {
        @*required: true - Mandatory scripts. Will shown on page source*@
        @RenderSection("Scripts", required: true)
    }
</body>
</html>
